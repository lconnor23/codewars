// Given a string of words, you need to find the highest scoring word.

// Each letter of a word scores points according to its position in the alphabet: a = 1, b = 2, c = 3 etc.

// For example, the score of abad is 8 (1 + 2 + 1 + 4).

// You need to return the highest scoring word as a string.

// If two words score the same, return the word that appears earliest in the original string.

// All letters will be lowercase and all inputs will be valid.

// My solution
function high(x){
  console.log(x)
//create variable of alphabet for scoring method
  let alpha = '0abcdefghijklmnopqrstuvwxyz'
  //create array to keep score
  let score = []
    
  //split x into array
  x = x.split(' ')
  //loop through each element to score
  for (let i = 0; i < x.length; i++){
    x[i]
    let sum = 0
    for (let j = 0; j < x[i].length; j++){
      sum += alpha.indexOf(x[i][j]) 
    }score.push(sum)
  }
  //return highest word as string or first highest in string
  let num = score.indexOf(Math.max(...score))
  return x[num]
}

//Simplified
function high(x){
    //split x, map through and reduce values, put into array
      let array = x.split(' ').map((e => [...e].reduce((a, b) => a + b.charCodeAt(0) -96, 0)))
      return x.split(' ')[array.indexOf(Math.max(...array))]
      //get math.max, return that element of x
    }