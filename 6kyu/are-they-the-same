// Given two arrays a and b write a function comp(a, b) (orcompSame(a, b)) that checks whether the two arrays have the "same" elements, with the same multiplicities (the multiplicity of a member is the number of times it appears). "Same" means, here, that the elements in b are the elements in a squared, regardless of the order.

// Examples
// Valid arrays
// a = [121, 144, 19, 161, 19, 144, 19, 11]  
// b = [121, 14641, 20736, 361, 25921, 361, 20736, 361]
// If a or b are nil (or null or None, depending on the language), the problem doesn't make sense so return false.

// My Solution
function comp(array1, array2){
    if (array1 === null || array2 === null){
      return false
    }
    array1 = array1.sort((a, b) => a - b).map(e => e**2).toString()
    array2 = array2.sort((a, b) => a - b)
    return array1 == array2
  }