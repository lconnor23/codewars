// John has invited some friends. His list is:

// s = "Fred:Corwill;Wilfred:Corwill;Barney:Tornbull;Betty:Tornbull;Bjon:Tornbull;Raphael:Corwill;Alfred:Corwill";
// Could you make a program that

// makes this string uppercase
// gives it sorted in alphabetical order by last name.
// When the last names are the same, sort them by first name. Last name and first name of a guest come in the result between parentheses separated by a comma.

// So the result of function meeting(s) will be:

// "(CORWILL, ALFRED)(CORWILL, FRED)(CORWILL, RAPHAEL)(CORWILL, WILFRED)(TORNBULL, BARNEY)(TORNBULL, BETTY)(TORNBULL, BJON)"
// It can happen that in two distinct families with the same family name two people have the same first name too.

// My solution
function meeting(s) {
  //make string uppercase, split by semicolon
    s = s.toUpperCase().split(';')
  //map through each to split again, reverse name order, and sort alphabetically
          .map(e => e.split(':').reverse())
          .sort()
  //loop through to add parentheses and return as one string
  let names = ''
    for (let i = 0; i < s.length; i++){
      names += `(${s[i][0]}, ${s[i][1]})`
    }   
  return names
}