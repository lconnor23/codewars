// Scenario
// Several people are standing in a row divided into two teams.
// The first person goes into team 1, the second goes into team 2, the third goes into team 1, and so on.

// Task
// Given an array of positive integers (the weights of the people), return a new array/tuple of two integers, where the first one is the total weight of team 1, and the second one is the total weight of team 2.

// Notes
// Array size is at least 1.
// All numbers will be positive.
// Input >> Output Examples
// rowWeights([13, 27, 49])  ==>  return (62, 27)

// My solution
function rowWeights(array){
  let team1 = []
  let team2 = []
  //declare two empty arrays
  //loop through array to divide teams
  for(let i = 0; i < array.length; i++){
    if (i % 2 === 0){
      team1.push(array[i])
    }else {
      team2.push(array[i])
    }
  }
  //sum both arrays
  let sum1 = team1.reduce((a, b) => a + b, 0)
  let sum2 = team2.reduce((a, b) => a + b, 0)
  //return sums
  return [sum1, sum2]
}

//Another
function rowWeights(array){
    let t1 = array.filter((x, i)=>i%2==0).reduce((a,item)=>a+item,0);
    let t2 = array.filter((x, i)=>i%2!=0).reduce((a,item)=>a+item,0);
    
    return [t1, t2]
  }