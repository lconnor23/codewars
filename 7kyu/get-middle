// Kata.getMiddle("test") should return "es"

// Kata.getMiddle("testing") should return "t"

// Kata.getMiddle("middle") should return "dd"

// Kata.getMiddle("A") should return "A"
// #Input

// A word (string) of length 0 < str < 1000 (In javascript you may get slightly more than 1000 in some test cases due to an error in the test cases). You do not need to test for this. This is only here to tell you that you do not need to worry about your solution timing out.

// #Output

// The middle character(s) of the word represented as a string.

//My solution
//This one took a couple tries because I was dealing with string length, but had to remember that strings start with index of 0, so to subtract.
function getMiddle(s){
    let odd = s.length/2 - .5
    let even = s.length/2 -1
    if (s.length % 2 === 1){
      return s.slice(odd, odd + 1)
    } else return s.slice(even, even + 2)
  }

  //Other solution
  //REMEMBER- zero is falsey, any other interger is truthy
  function getMiddle(s) {
    var middle = s.length / 2;
    return (s.length % 2) 
      ? s.charAt(Math.floor(middle))
      : s.slice(middle - 1, middle + 1);
  }