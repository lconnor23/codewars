// Count the number of divisors of a positive integer n.

// Random tests go up to n = 500000.

// Examples (input --> output)
// 4 --> 3 (1, 2, 4)
// 5 --> 2 (1, 5)
// 12 --> 6 (1, 2, 3, 4, 6, 12)
// 30 --> 8 (1, 2, 3, 5, 6, 10, 15, 30)
// Note you should only return a number, the count of divisors. The numbers between parentheses are shown only for you to see which numbers are counted in each case.

//My solution
function getDivisorsCnt(n){
    let arr = []
    for (let i = 1; i <= n; i++){
      if (n % i === 0){
        arr.push(i)
      }
    }return arr.length
}

//My other solution. You don't actually need to know the divisors so instead of making an array in the above solution, we can just count how many meet the criteria.
function getDivisorsCnt(n){
    let divisors = 0
    for (let i = 1; i <= n; i++){
      if (n % i === 0){
        divisors ++
      }
    }return divisors
}